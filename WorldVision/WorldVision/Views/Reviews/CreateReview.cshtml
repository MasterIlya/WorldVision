@model CompositeCreateReviewModel
@{
    string msg = "";
    string pageId = Guid.NewGuid().ToString();
}
@{
    if (Model.ReviewModel == null || Model.ReviewModel.ReviewId == 0)
    {
        msg = "CreateReview";
        ViewData["Title"] = "Create Review";
    }
    else
    {
        msg = "UpdateReview";
        ViewData["Title"] = "Update Review";
        <style>
            .dz-image img {
                width: 130px;
                height: 130px;
            }
        </style>
    }
    Layout = "_Layout";
}

<link href="~/lib/Trumbowyg-main/dist/ui/trumbowyg.min.css" rel="stylesheet" />
<link href="https://unpkg.com/@@yaireo/tagify/dist/tagify.css" rel="stylesheet" type="text/css" />
<div class="container">
    <form id="form2" name="form2" asp-action="@msg" asp-controller="Reviews"
          asp-route-email="@Model.Email" asp-route-pageId="@pageId"
          enctype="multipart/form-data" data-parsley-validate class="form-horizontal form-label-left">
        @if (msg == "UpdateReview")
        {
            <div>
                <input asp-for="ReviewModel.ReviewId" value="@Model.ReviewModel.ReviewId" hidden />
            </div>
        }
        <div class="mb-3">
            <label for="example-text-input" class="col-xs-2 col-form-label">@Localizer["Review Type"]</label>
            <select class="form-control" asp-for="ReviewModel.ReviewTypeId">
                @foreach (var type in Model.Types)
                {
                    <option value="@type.TypeId">@Localizer[type.Type]</option>
                }
            </select>
        </div>
        <div class="mb-3">
            <label class="form-label">@Localizer["Title"]</label>
            <input type="text" asp-for="ReviewModel.Title" class="form-control" placeholder=@Localizer["Title"]>
            <span asp-validation-for="ReviewModel.Title" class="text-danger"></span>
        </div>
        <div class="mb-3">
            <label class="form-label">@Localizer["Content"]</label>
            <textarea id="content" asp-for="ReviewModel.Content" class="form-control" placeholder=@Localizer["Content"]></textarea>
            <span asp-validation-for="ReviewModel.Content" class="text-danger"></span>
        </div>
        <div class="mb-3">
            <label class="form-label">@Localizer["Tags"]</label>
            <input name='TagsJson' type="text" class="form-control" placeholder=@Localizer["Tags"]>
            <span asp-validation-for="ReviewModel.Tags" class="text-danger"></span>
        </div>
        <div class="mb-3">
            <label class="form-label">@Localizer["Author Score"]</label>
            <input type="number" min="1" max="5" asp-for="ReviewModel.AuthorScore" class="form-control" placeholder=@Localizer["Author Score"]>
            <span asp-validation-for="ReviewModel.AuthorScore" class="text-danger"></span>
        </div>
        <div class="form-group" style="margin-top: 10px; margin-bottom: 10px">
            <input id="hiddenEmail" value="@Model.Email" hidden>
            <input id="pageId" value="@pageId" hidden>
            <label class="control-label col-md-2" for="first-name">
                @Localizer["Upload Photo"] <span class="required">*</span>
            </label>
            <div class="col-md-6" id="dropzone">
                <div action="/Reviews/UploadImage" class="dropzone" id="uploader">
                    @Localizer["Drop"]<br />
                </div>
            </div>
            <span id="except" class="text-danger"></span>
        </div>
        @if (msg == "UpdateReview")
        {
            <input class="btn btn-primary" type="submit" value=@Localizer["Update"]>
        }
        else
        {
            <input class="btn btn-primary" type="submit" value=@Localizer["Create"]>
        }
    </form>
</div>
<script>
    var existingFiles = @Json.Serialize(Model.Images);
</script>
<script src="~/lib/dropzone/min/dropzone.min.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.2.0/jquery.min.js"></script>
<script src="~/js/widget.js"></script>
<script src="~/js/Update.js"></script>
<script src="//ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
<script src="~/lib/Trumbowyg-main/dist/trumbowyg.js"></script>
<script src="https://unpkg.com/@@yaireo/tagify"></script>
<script src="https://unpkg.com/@@yaireo/tagify/dist/tagify.polyfills.min.js"></script>
@if (Model.ReviewModel != null)
{
<script>
        $('#content').trumbowyg();
        let tags = @Json.Serialize(Model.ReviewModel.Tags);
        var input = document.querySelector('input[name=TagsJson]');
        new Tagify(input, {
            whitelist: @Json.Serialize(Model.Tags),
            dropdown: {
                classname: "color-blue",
                enabled: 0,              // show the dropdown immediately on focus
                maxItems: 5,
                position: "text",         // place the dropdown near the typed text
                closeOnSelect: false,          // keep the dropdown open after selecting a suggestion
                highlightFirst: true
            }
        }).addTags(tags);
</script>
}
else
{
    <script>
        $('#content').trumbowyg();
        var input = document.querySelector('input[name=TagsJson]');
        new Tagify(input, {
            whitelist: @Json.Serialize(Model.Tags),
            dropdown: {
                classname: "color-blue",
                enabled: 0,              // show the dropdown immediately on focus
                maxItems: 5,
                position: "text",         // place the dropdown near the typed text
                closeOnSelect: false,          // keep the dropdown open after selecting a suggestion
                highlightFirst: true
            }
        });
    </script>
}

